<?php

declare(strict_types=1);

/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpaceTradersAPILib\Models;

use stdClass;

class Faction implements \JsonSerializable
{
    /**
     * @var string
     */
    private $symbol;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $description;

    /**
     * @var string
     */
    private $headquarters;

    /**
     * @var string[]
     */
    private $traits;

    /**
     * @param string $symbol
     * @param string $name
     * @param string $description
     * @param string $headquarters
     * @param string[] $traits
     */
    public function __construct(string $symbol, string $name, string $description, string $headquarters, array $traits)
    {
        $this->symbol = $symbol;
        $this->name = $name;
        $this->description = $description;
        $this->headquarters = $headquarters;
        $this->traits = $traits;
    }

    /**
     * Returns Symbol.
     */
    public function getSymbol(): string
    {
        return $this->symbol;
    }

    /**
     * Sets Symbol.
     *
     * @required
     * @maps symbol
     */
    public function setSymbol(string $symbol): void
    {
        $this->symbol = $symbol;
    }

    /**
     * Returns Name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Headquarters.
     */
    public function getHeadquarters(): string
    {
        return $this->headquarters;
    }

    /**
     * Sets Headquarters.
     *
     * @required
     * @maps headquarters
     */
    public function setHeadquarters(string $headquarters): void
    {
        $this->headquarters = $headquarters;
    }

    /**
     * Returns Traits.
     *
     * @return string[]
     */
    public function getTraits(): array
    {
        return $this->traits;
    }

    /**
     * Sets Traits.
     *
     * @required
     * @maps traits
     *
     * @param string[] $traits
     */
    public function setTraits(array $traits): void
    {
        $this->traits = $traits;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['symbol']       = $this->symbol;
        $json['name']         = $this->name;
        $json['description']  = $this->description;
        $json['headquarters'] = $this->headquarters;
        $json['traits']       = $this->traits;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
