<?php

declare(strict_types=1);

/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpaceTradersAPILib\Models;

use stdClass;

class Payment implements \JsonSerializable
{
    /**
     * @var int
     */
    private $onAccepted;

    /**
     * @var int
     */
    private $onFulfilled;

    /**
     * @param int $onAccepted
     * @param int $onFulfilled
     */
    public function __construct(int $onAccepted, int $onFulfilled)
    {
        $this->onAccepted = $onAccepted;
        $this->onFulfilled = $onFulfilled;
    }

    /**
     * Returns On Accepted.
     */
    public function getOnAccepted(): int
    {
        return $this->onAccepted;
    }

    /**
     * Sets On Accepted.
     *
     * @required
     * @maps onAccepted
     */
    public function setOnAccepted(int $onAccepted): void
    {
        $this->onAccepted = $onAccepted;
    }

    /**
     * Returns On Fulfilled.
     */
    public function getOnFulfilled(): int
    {
        return $this->onFulfilled;
    }

    /**
     * Sets On Fulfilled.
     *
     * @required
     * @maps onFulfilled
     */
    public function setOnFulfilled(int $onFulfilled): void
    {
        $this->onFulfilled = $onFulfilled;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['onAccepted']  = $this->onAccepted;
        $json['onFulfilled'] = $this->onFulfilled;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
