<?php

declare(strict_types=1);

/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpaceTradersAPILib\Models;

use stdClass;

class Data13 implements \JsonSerializable
{
    /**
     * @var ScannedShip[]
     */
    private $ships;

    /**
     * @var Cooldown
     */
    private $cooldown;

    /**
     * @param ScannedShip[] $ships
     * @param Cooldown $cooldown
     */
    public function __construct(array $ships, Cooldown $cooldown)
    {
        $this->ships = $ships;
        $this->cooldown = $cooldown;
    }

    /**
     * Returns Ships.
     *
     * @return ScannedShip[]
     */
    public function getShips(): array
    {
        return $this->ships;
    }

    /**
     * Sets Ships.
     *
     * @required
     * @maps ships
     *
     * @param ScannedShip[] $ships
     */
    public function setShips(array $ships): void
    {
        $this->ships = $ships;
    }

    /**
     * Returns Cooldown.
     */
    public function getCooldown(): Cooldown
    {
        return $this->cooldown;
    }

    /**
     * Sets Cooldown.
     *
     * @required
     * @maps cooldown
     */
    public function setCooldown(Cooldown $cooldown): void
    {
        $this->cooldown = $cooldown;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['ships']    = $this->ships;
        $json['cooldown'] = $this->cooldown;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
