<?php

declare(strict_types=1);

/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpaceTradersAPILib\Models;

use stdClass;

class ShipyardListing implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var string
     */
    private $waypoint;

    /**
     * @var int
     */
    private $price;

    /**
     * @var string
     */
    private $role;

    /**
     * @var string
     */
    private $frame;

    /**
     * @var string
     */
    private $reactor;

    /**
     * @var string
     */
    private $engine;

    /**
     * @var string[]
     */
    private $modules;

    /**
     * @var string[]
     */
    private $mounts;

    /**
     * @param string $id
     * @param string $waypoint
     * @param int $price
     * @param string $role
     * @param string $frame
     * @param string $reactor
     * @param string $engine
     * @param string[] $modules
     * @param string[] $mounts
     */
    public function __construct(
        string $id,
        string $waypoint,
        int $price,
        string $role,
        string $frame,
        string $reactor,
        string $engine,
        array $modules,
        array $mounts
    ) {
        $this->id = $id;
        $this->waypoint = $waypoint;
        $this->price = $price;
        $this->role = $role;
        $this->frame = $frame;
        $this->reactor = $reactor;
        $this->engine = $engine;
        $this->modules = $modules;
        $this->mounts = $mounts;
    }

    /**
     * Returns Id.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Waypoint.
     */
    public function getWaypoint(): string
    {
        return $this->waypoint;
    }

    /**
     * Sets Waypoint.
     *
     * @required
     * @maps waypoint
     */
    public function setWaypoint(string $waypoint): void
    {
        $this->waypoint = $waypoint;
    }

    /**
     * Returns Price.
     */
    public function getPrice(): int
    {
        return $this->price;
    }

    /**
     * Sets Price.
     *
     * @required
     * @maps price
     */
    public function setPrice(int $price): void
    {
        $this->price = $price;
    }

    /**
     * Returns Role.
     */
    public function getRole(): string
    {
        return $this->role;
    }

    /**
     * Sets Role.
     *
     * @required
     * @maps role
     */
    public function setRole(string $role): void
    {
        $this->role = $role;
    }

    /**
     * Returns Frame.
     */
    public function getFrame(): string
    {
        return $this->frame;
    }

    /**
     * Sets Frame.
     *
     * @required
     * @maps frame
     */
    public function setFrame(string $frame): void
    {
        $this->frame = $frame;
    }

    /**
     * Returns Reactor.
     */
    public function getReactor(): string
    {
        return $this->reactor;
    }

    /**
     * Sets Reactor.
     *
     * @required
     * @maps reactor
     */
    public function setReactor(string $reactor): void
    {
        $this->reactor = $reactor;
    }

    /**
     * Returns Engine.
     */
    public function getEngine(): string
    {
        return $this->engine;
    }

    /**
     * Sets Engine.
     *
     * @required
     * @maps engine
     */
    public function setEngine(string $engine): void
    {
        $this->engine = $engine;
    }

    /**
     * Returns Modules.
     *
     * @return string[]
     */
    public function getModules(): array
    {
        return $this->modules;
    }

    /**
     * Sets Modules.
     *
     * @required
     * @maps modules
     *
     * @param string[] $modules
     */
    public function setModules(array $modules): void
    {
        $this->modules = $modules;
    }

    /**
     * Returns Mounts.
     *
     * @return string[]
     */
    public function getMounts(): array
    {
        return $this->mounts;
    }

    /**
     * Sets Mounts.
     *
     * @required
     * @maps mounts
     *
     * @param string[] $mounts
     */
    public function setMounts(array $mounts): void
    {
        $this->mounts = $mounts;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']       = $this->id;
        $json['waypoint'] = $this->waypoint;
        $json['price']    = $this->price;
        $json['role']     = $this->role;
        $json['frame']    = $this->frame;
        $json['reactor']  = $this->reactor;
        $json['engine']   = $this->engine;
        $json['modules']  = $this->modules;
        $json['mounts']   = $this->mounts;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
