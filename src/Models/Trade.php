<?php

declare(strict_types=1);

/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpaceTradersAPILib\Models;

use stdClass;

class Trade implements \JsonSerializable
{
    /**
     * @var string
     */
    private $waypointSymbol;

    /**
     * @var string
     */
    private $tradeSymbol;

    /**
     * @var int
     */
    private $credits;

    /**
     * @var int
     */
    private $units;

    /**
     * @param string $waypointSymbol
     * @param string $tradeSymbol
     * @param int $credits
     * @param int $units
     */
    public function __construct(string $waypointSymbol, string $tradeSymbol, int $credits, int $units)
    {
        $this->waypointSymbol = $waypointSymbol;
        $this->tradeSymbol = $tradeSymbol;
        $this->credits = $credits;
        $this->units = $units;
    }

    /**
     * Returns Waypoint Symbol.
     */
    public function getWaypointSymbol(): string
    {
        return $this->waypointSymbol;
    }

    /**
     * Sets Waypoint Symbol.
     *
     * @required
     * @maps waypointSymbol
     */
    public function setWaypointSymbol(string $waypointSymbol): void
    {
        $this->waypointSymbol = $waypointSymbol;
    }

    /**
     * Returns Trade Symbol.
     */
    public function getTradeSymbol(): string
    {
        return $this->tradeSymbol;
    }

    /**
     * Sets Trade Symbol.
     *
     * @required
     * @maps tradeSymbol
     */
    public function setTradeSymbol(string $tradeSymbol): void
    {
        $this->tradeSymbol = $tradeSymbol;
    }

    /**
     * Returns Credits.
     */
    public function getCredits(): int
    {
        return $this->credits;
    }

    /**
     * Sets Credits.
     *
     * @required
     * @maps credits
     */
    public function setCredits(int $credits): void
    {
        $this->credits = $credits;
    }

    /**
     * Returns Units.
     */
    public function getUnits(): int
    {
        return $this->units;
    }

    /**
     * Sets Units.
     *
     * @required
     * @maps units
     */
    public function setUnits(int $units): void
    {
        $this->units = $units;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['waypointSymbol'] = $this->waypointSymbol;
        $json['tradeSymbol']    = $this->tradeSymbol;
        $json['credits']        = $this->credits;
        $json['units']          = $this->units;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
