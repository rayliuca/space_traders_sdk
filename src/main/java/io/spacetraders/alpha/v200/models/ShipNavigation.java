/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.spacetraders.alpha.v200.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ShipNavigation type.
 */
public class ShipNavigation {
    private String shipSymbol;
    private String departure;
    private String destination;
    private int durationRemaining;
    private Object arrivedAt;

    /**
     * Default constructor.
     */
    public ShipNavigation() {
    }

    /**
     * Initialization constructor.
     * @param  shipSymbol  String value for shipSymbol.
     * @param  departure  String value for departure.
     * @param  destination  String value for destination.
     * @param  durationRemaining  int value for durationRemaining.
     * @param  arrivedAt  Object value for arrivedAt.
     */
    public ShipNavigation(
            String shipSymbol,
            String departure,
            String destination,
            int durationRemaining,
            Object arrivedAt) {
        this.shipSymbol = shipSymbol;
        this.departure = departure;
        this.destination = destination;
        this.durationRemaining = durationRemaining;
        this.arrivedAt = arrivedAt;
    }

    /**
     * Getter for ShipSymbol.
     * @return Returns the String
     */
    @JsonGetter("shipSymbol")
    public String getShipSymbol() {
        return shipSymbol;
    }

    /**
     * Setter for ShipSymbol.
     * @param shipSymbol Value for String
     */
    @JsonSetter("shipSymbol")
    public void setShipSymbol(String shipSymbol) {
        this.shipSymbol = shipSymbol;
    }

    /**
     * Getter for Departure.
     * @return Returns the String
     */
    @JsonGetter("departure")
    public String getDeparture() {
        return departure;
    }

    /**
     * Setter for Departure.
     * @param departure Value for String
     */
    @JsonSetter("departure")
    public void setDeparture(String departure) {
        this.departure = departure;
    }

    /**
     * Getter for Destination.
     * @return Returns the String
     */
    @JsonGetter("destination")
    public String getDestination() {
        return destination;
    }

    /**
     * Setter for Destination.
     * @param destination Value for String
     */
    @JsonSetter("destination")
    public void setDestination(String destination) {
        this.destination = destination;
    }

    /**
     * Getter for DurationRemaining.
     * @return Returns the int
     */
    @JsonGetter("durationRemaining")
    public int getDurationRemaining() {
        return durationRemaining;
    }

    /**
     * Setter for DurationRemaining.
     * @param durationRemaining Value for int
     */
    @JsonSetter("durationRemaining")
    public void setDurationRemaining(int durationRemaining) {
        this.durationRemaining = durationRemaining;
    }

    /**
     * Getter for ArrivedAt.
     * @return Returns the Object
     */
    @JsonGetter("arrivedAt")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getArrivedAt() {
        return arrivedAt;
    }

    /**
     * Setter for ArrivedAt.
     * @param arrivedAt Value for Object
     */
    @JsonSetter("arrivedAt")
    public void setArrivedAt(Object arrivedAt) {
        this.arrivedAt = arrivedAt;
    }

    /**
     * Converts this ShipNavigation into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ShipNavigation [" + "shipSymbol=" + shipSymbol + ", departure=" + departure
                + ", destination=" + destination + ", durationRemaining=" + durationRemaining
                + ", arrivedAt=" + arrivedAt + "]";
    }

    /**
     * Builds a new {@link ShipNavigation.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ShipNavigation.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(shipSymbol, departure, destination, durationRemaining)
                .arrivedAt(getArrivedAt());
        return builder;
    }

    /**
     * Class to build instances of {@link ShipNavigation}.
     */
    public static class Builder {
        private String shipSymbol;
        private String departure;
        private String destination;
        private int durationRemaining;
        private Object arrivedAt;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  shipSymbol  String value for shipSymbol.
         * @param  departure  String value for departure.
         * @param  destination  String value for destination.
         * @param  durationRemaining  int value for durationRemaining.
         */
        public Builder(String shipSymbol, String departure, String destination,
                int durationRemaining) {
            this.shipSymbol = shipSymbol;
            this.departure = departure;
            this.destination = destination;
            this.durationRemaining = durationRemaining;
        }

        /**
         * Setter for shipSymbol.
         * @param  shipSymbol  String value for shipSymbol.
         * @return Builder
         */
        public Builder shipSymbol(String shipSymbol) {
            this.shipSymbol = shipSymbol;
            return this;
        }

        /**
         * Setter for departure.
         * @param  departure  String value for departure.
         * @return Builder
         */
        public Builder departure(String departure) {
            this.departure = departure;
            return this;
        }

        /**
         * Setter for destination.
         * @param  destination  String value for destination.
         * @return Builder
         */
        public Builder destination(String destination) {
            this.destination = destination;
            return this;
        }

        /**
         * Setter for durationRemaining.
         * @param  durationRemaining  int value for durationRemaining.
         * @return Builder
         */
        public Builder durationRemaining(int durationRemaining) {
            this.durationRemaining = durationRemaining;
            return this;
        }

        /**
         * Setter for arrivedAt.
         * @param  arrivedAt  Object value for arrivedAt.
         * @return Builder
         */
        public Builder arrivedAt(Object arrivedAt) {
            this.arrivedAt = arrivedAt;
            return this;
        }

        /**
         * Builds a new {@link ShipNavigation} object using the set fields.
         * @return {@link ShipNavigation}
         */
        public ShipNavigation build() {
            return new ShipNavigation(shipSymbol, departure, destination, durationRemaining,
                    arrivedAt);
        }
    }
}
