/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.spacetraders.alpha.v200.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Data type.
 */
public class Data {
    private String tradeSymbol;
    private String destination;
    private int units;
    private int fulfilled;

    /**
     * Default constructor.
     */
    public Data() {
    }

    /**
     * Initialization constructor.
     * @param  tradeSymbol  String value for tradeSymbol.
     * @param  destination  String value for destination.
     * @param  units  int value for units.
     * @param  fulfilled  int value for fulfilled.
     */
    public Data(
            String tradeSymbol,
            String destination,
            int units,
            int fulfilled) {
        this.tradeSymbol = tradeSymbol;
        this.destination = destination;
        this.units = units;
        this.fulfilled = fulfilled;
    }

    /**
     * Getter for TradeSymbol.
     * @return Returns the String
     */
    @JsonGetter("tradeSymbol")
    public String getTradeSymbol() {
        return tradeSymbol;
    }

    /**
     * Setter for TradeSymbol.
     * @param tradeSymbol Value for String
     */
    @JsonSetter("tradeSymbol")
    public void setTradeSymbol(String tradeSymbol) {
        this.tradeSymbol = tradeSymbol;
    }

    /**
     * Getter for Destination.
     * @return Returns the String
     */
    @JsonGetter("destination")
    public String getDestination() {
        return destination;
    }

    /**
     * Setter for Destination.
     * @param destination Value for String
     */
    @JsonSetter("destination")
    public void setDestination(String destination) {
        this.destination = destination;
    }

    /**
     * Getter for Units.
     * @return Returns the int
     */
    @JsonGetter("units")
    public int getUnits() {
        return units;
    }

    /**
     * Setter for Units.
     * @param units Value for int
     */
    @JsonSetter("units")
    public void setUnits(int units) {
        this.units = units;
    }

    /**
     * Getter for Fulfilled.
     * @return Returns the int
     */
    @JsonGetter("fulfilled")
    public int getFulfilled() {
        return fulfilled;
    }

    /**
     * Setter for Fulfilled.
     * @param fulfilled Value for int
     */
    @JsonSetter("fulfilled")
    public void setFulfilled(int fulfilled) {
        this.fulfilled = fulfilled;
    }

    /**
     * Converts this Data into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Data [" + "tradeSymbol=" + tradeSymbol + ", destination=" + destination + ", units="
                + units + ", fulfilled=" + fulfilled + "]";
    }

    /**
     * Builds a new {@link Data.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Data.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(tradeSymbol, destination, units, fulfilled);
        return builder;
    }

    /**
     * Class to build instances of {@link Data}.
     */
    public static class Builder {
        private String tradeSymbol;
        private String destination;
        private int units;
        private int fulfilled;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  tradeSymbol  String value for tradeSymbol.
         * @param  destination  String value for destination.
         * @param  units  int value for units.
         * @param  fulfilled  int value for fulfilled.
         */
        public Builder(String tradeSymbol, String destination, int units, int fulfilled) {
            this.tradeSymbol = tradeSymbol;
            this.destination = destination;
            this.units = units;
            this.fulfilled = fulfilled;
        }

        /**
         * Setter for tradeSymbol.
         * @param  tradeSymbol  String value for tradeSymbol.
         * @return Builder
         */
        public Builder tradeSymbol(String tradeSymbol) {
            this.tradeSymbol = tradeSymbol;
            return this;
        }

        /**
         * Setter for destination.
         * @param  destination  String value for destination.
         * @return Builder
         */
        public Builder destination(String destination) {
            this.destination = destination;
            return this;
        }

        /**
         * Setter for units.
         * @param  units  int value for units.
         * @return Builder
         */
        public Builder units(int units) {
            this.units = units;
            return this;
        }

        /**
         * Setter for fulfilled.
         * @param  fulfilled  int value for fulfilled.
         * @return Builder
         */
        public Builder fulfilled(int fulfilled) {
            this.fulfilled = fulfilled;
            return this;
        }

        /**
         * Builds a new {@link Data} object using the set fields.
         * @return {@link Data}
         */
        public Data build() {
            return new Data(tradeSymbol, destination, units, fulfilled);
        }
    }
}
