/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.spacetraders.alpha.v200.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ScannedShip type.
 */
public class ScannedShip {
    private String symbol;
    private Registration registration;
    private String frameSymbol;
    private String reactorSymbol;
    private String engineSymbol;
    private String expiration;

    /**
     * Default constructor.
     */
    public ScannedShip() {
    }

    /**
     * Initialization constructor.
     * @param  symbol  String value for symbol.
     * @param  registration  Registration value for registration.
     * @param  frameSymbol  String value for frameSymbol.
     * @param  reactorSymbol  String value for reactorSymbol.
     * @param  engineSymbol  String value for engineSymbol.
     * @param  expiration  String value for expiration.
     */
    public ScannedShip(
            String symbol,
            Registration registration,
            String frameSymbol,
            String reactorSymbol,
            String engineSymbol,
            String expiration) {
        this.symbol = symbol;
        this.registration = registration;
        this.frameSymbol = frameSymbol;
        this.reactorSymbol = reactorSymbol;
        this.engineSymbol = engineSymbol;
        this.expiration = expiration;
    }

    /**
     * Getter for Symbol.
     * @return Returns the String
     */
    @JsonGetter("symbol")
    public String getSymbol() {
        return symbol;
    }

    /**
     * Setter for Symbol.
     * @param symbol Value for String
     */
    @JsonSetter("symbol")
    public void setSymbol(String symbol) {
        this.symbol = symbol;
    }

    /**
     * Getter for Registration.
     * @return Returns the Registration
     */
    @JsonGetter("registration")
    public Registration getRegistration() {
        return registration;
    }

    /**
     * Setter for Registration.
     * @param registration Value for Registration
     */
    @JsonSetter("registration")
    public void setRegistration(Registration registration) {
        this.registration = registration;
    }

    /**
     * Getter for FrameSymbol.
     * @return Returns the String
     */
    @JsonGetter("frameSymbol")
    public String getFrameSymbol() {
        return frameSymbol;
    }

    /**
     * Setter for FrameSymbol.
     * @param frameSymbol Value for String
     */
    @JsonSetter("frameSymbol")
    public void setFrameSymbol(String frameSymbol) {
        this.frameSymbol = frameSymbol;
    }

    /**
     * Getter for ReactorSymbol.
     * @return Returns the String
     */
    @JsonGetter("reactorSymbol")
    public String getReactorSymbol() {
        return reactorSymbol;
    }

    /**
     * Setter for ReactorSymbol.
     * @param reactorSymbol Value for String
     */
    @JsonSetter("reactorSymbol")
    public void setReactorSymbol(String reactorSymbol) {
        this.reactorSymbol = reactorSymbol;
    }

    /**
     * Getter for EngineSymbol.
     * @return Returns the String
     */
    @JsonGetter("engineSymbol")
    public String getEngineSymbol() {
        return engineSymbol;
    }

    /**
     * Setter for EngineSymbol.
     * @param engineSymbol Value for String
     */
    @JsonSetter("engineSymbol")
    public void setEngineSymbol(String engineSymbol) {
        this.engineSymbol = engineSymbol;
    }

    /**
     * Getter for Expiration.
     * @return Returns the String
     */
    @JsonGetter("expiration")
    public String getExpiration() {
        return expiration;
    }

    /**
     * Setter for Expiration.
     * @param expiration Value for String
     */
    @JsonSetter("expiration")
    public void setExpiration(String expiration) {
        this.expiration = expiration;
    }

    /**
     * Converts this ScannedShip into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ScannedShip [" + "symbol=" + symbol + ", registration=" + registration
                + ", frameSymbol=" + frameSymbol + ", reactorSymbol=" + reactorSymbol
                + ", engineSymbol=" + engineSymbol + ", expiration=" + expiration + "]";
    }

    /**
     * Builds a new {@link ScannedShip.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ScannedShip.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(symbol, registration, frameSymbol, reactorSymbol,
                engineSymbol, expiration);
        return builder;
    }

    /**
     * Class to build instances of {@link ScannedShip}.
     */
    public static class Builder {
        private String symbol;
        private Registration registration;
        private String frameSymbol;
        private String reactorSymbol;
        private String engineSymbol;
        private String expiration;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  symbol  String value for symbol.
         * @param  registration  Registration value for registration.
         * @param  frameSymbol  String value for frameSymbol.
         * @param  reactorSymbol  String value for reactorSymbol.
         * @param  engineSymbol  String value for engineSymbol.
         * @param  expiration  String value for expiration.
         */
        public Builder(String symbol, Registration registration, String frameSymbol,
                String reactorSymbol, String engineSymbol, String expiration) {
            this.symbol = symbol;
            this.registration = registration;
            this.frameSymbol = frameSymbol;
            this.reactorSymbol = reactorSymbol;
            this.engineSymbol = engineSymbol;
            this.expiration = expiration;
        }

        /**
         * Setter for symbol.
         * @param  symbol  String value for symbol.
         * @return Builder
         */
        public Builder symbol(String symbol) {
            this.symbol = symbol;
            return this;
        }

        /**
         * Setter for registration.
         * @param  registration  Registration value for registration.
         * @return Builder
         */
        public Builder registration(Registration registration) {
            this.registration = registration;
            return this;
        }

        /**
         * Setter for frameSymbol.
         * @param  frameSymbol  String value for frameSymbol.
         * @return Builder
         */
        public Builder frameSymbol(String frameSymbol) {
            this.frameSymbol = frameSymbol;
            return this;
        }

        /**
         * Setter for reactorSymbol.
         * @param  reactorSymbol  String value for reactorSymbol.
         * @return Builder
         */
        public Builder reactorSymbol(String reactorSymbol) {
            this.reactorSymbol = reactorSymbol;
            return this;
        }

        /**
         * Setter for engineSymbol.
         * @param  engineSymbol  String value for engineSymbol.
         * @return Builder
         */
        public Builder engineSymbol(String engineSymbol) {
            this.engineSymbol = engineSymbol;
            return this;
        }

        /**
         * Setter for expiration.
         * @param  expiration  String value for expiration.
         * @return Builder
         */
        public Builder expiration(String expiration) {
            this.expiration = expiration;
            return this;
        }

        /**
         * Builds a new {@link ScannedShip} object using the set fields.
         * @return {@link ScannedShip}
         */
        public ScannedShip build() {
            return new ScannedShip(symbol, registration, frameSymbol, reactorSymbol, engineSymbol,
                    expiration);
        }
    }
}
