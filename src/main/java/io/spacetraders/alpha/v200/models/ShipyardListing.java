/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.spacetraders.alpha.v200.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ShipyardListing type.
 */
public class ShipyardListing {
    private String id;
    private String waypoint;
    private int price;
    private String role;
    private String frame;
    private String reactor;
    private String engine;
    private List<String> modules;
    private List<String> mounts;

    /**
     * Default constructor.
     */
    public ShipyardListing() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  waypoint  String value for waypoint.
     * @param  price  int value for price.
     * @param  role  String value for role.
     * @param  frame  String value for frame.
     * @param  reactor  String value for reactor.
     * @param  engine  String value for engine.
     * @param  modules  List of String value for modules.
     * @param  mounts  List of String value for mounts.
     */
    public ShipyardListing(
            String id,
            String waypoint,
            int price,
            String role,
            String frame,
            String reactor,
            String engine,
            List<String> modules,
            List<String> mounts) {
        this.id = id;
        this.waypoint = waypoint;
        this.price = price;
        this.role = role;
        this.frame = frame;
        this.reactor = reactor;
        this.engine = engine;
        this.modules = modules;
        this.mounts = mounts;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Waypoint.
     * @return Returns the String
     */
    @JsonGetter("waypoint")
    public String getWaypoint() {
        return waypoint;
    }

    /**
     * Setter for Waypoint.
     * @param waypoint Value for String
     */
    @JsonSetter("waypoint")
    public void setWaypoint(String waypoint) {
        this.waypoint = waypoint;
    }

    /**
     * Getter for Price.
     * @return Returns the int
     */
    @JsonGetter("price")
    public int getPrice() {
        return price;
    }

    /**
     * Setter for Price.
     * @param price Value for int
     */
    @JsonSetter("price")
    public void setPrice(int price) {
        this.price = price;
    }

    /**
     * Getter for Role.
     * @return Returns the String
     */
    @JsonGetter("role")
    public String getRole() {
        return role;
    }

    /**
     * Setter for Role.
     * @param role Value for String
     */
    @JsonSetter("role")
    public void setRole(String role) {
        this.role = role;
    }

    /**
     * Getter for Frame.
     * @return Returns the String
     */
    @JsonGetter("frame")
    public String getFrame() {
        return frame;
    }

    /**
     * Setter for Frame.
     * @param frame Value for String
     */
    @JsonSetter("frame")
    public void setFrame(String frame) {
        this.frame = frame;
    }

    /**
     * Getter for Reactor.
     * @return Returns the String
     */
    @JsonGetter("reactor")
    public String getReactor() {
        return reactor;
    }

    /**
     * Setter for Reactor.
     * @param reactor Value for String
     */
    @JsonSetter("reactor")
    public void setReactor(String reactor) {
        this.reactor = reactor;
    }

    /**
     * Getter for Engine.
     * @return Returns the String
     */
    @JsonGetter("engine")
    public String getEngine() {
        return engine;
    }

    /**
     * Setter for Engine.
     * @param engine Value for String
     */
    @JsonSetter("engine")
    public void setEngine(String engine) {
        this.engine = engine;
    }

    /**
     * Getter for Modules.
     * @return Returns the List of String
     */
    @JsonGetter("modules")
    public List<String> getModules() {
        return modules;
    }

    /**
     * Setter for Modules.
     * @param modules Value for List of String
     */
    @JsonSetter("modules")
    public void setModules(List<String> modules) {
        this.modules = modules;
    }

    /**
     * Getter for Mounts.
     * @return Returns the List of String
     */
    @JsonGetter("mounts")
    public List<String> getMounts() {
        return mounts;
    }

    /**
     * Setter for Mounts.
     * @param mounts Value for List of String
     */
    @JsonSetter("mounts")
    public void setMounts(List<String> mounts) {
        this.mounts = mounts;
    }

    /**
     * Converts this ShipyardListing into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ShipyardListing [" + "id=" + id + ", waypoint=" + waypoint + ", price=" + price
                + ", role=" + role + ", frame=" + frame + ", reactor=" + reactor + ", engine="
                + engine + ", modules=" + modules + ", mounts=" + mounts + "]";
    }

    /**
     * Builds a new {@link ShipyardListing.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ShipyardListing.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, waypoint, price, role, frame, reactor, engine, modules,
                mounts);
        return builder;
    }

    /**
     * Class to build instances of {@link ShipyardListing}.
     */
    public static class Builder {
        private String id;
        private String waypoint;
        private int price;
        private String role;
        private String frame;
        private String reactor;
        private String engine;
        private List<String> modules;
        private List<String> mounts;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  waypoint  String value for waypoint.
         * @param  price  int value for price.
         * @param  role  String value for role.
         * @param  frame  String value for frame.
         * @param  reactor  String value for reactor.
         * @param  engine  String value for engine.
         * @param  modules  List of String value for modules.
         * @param  mounts  List of String value for mounts.
         */
        public Builder(String id, String waypoint, int price, String role, String frame,
                String reactor, String engine, List<String> modules, List<String> mounts) {
            this.id = id;
            this.waypoint = waypoint;
            this.price = price;
            this.role = role;
            this.frame = frame;
            this.reactor = reactor;
            this.engine = engine;
            this.modules = modules;
            this.mounts = mounts;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for waypoint.
         * @param  waypoint  String value for waypoint.
         * @return Builder
         */
        public Builder waypoint(String waypoint) {
            this.waypoint = waypoint;
            return this;
        }

        /**
         * Setter for price.
         * @param  price  int value for price.
         * @return Builder
         */
        public Builder price(int price) {
            this.price = price;
            return this;
        }

        /**
         * Setter for role.
         * @param  role  String value for role.
         * @return Builder
         */
        public Builder role(String role) {
            this.role = role;
            return this;
        }

        /**
         * Setter for frame.
         * @param  frame  String value for frame.
         * @return Builder
         */
        public Builder frame(String frame) {
            this.frame = frame;
            return this;
        }

        /**
         * Setter for reactor.
         * @param  reactor  String value for reactor.
         * @return Builder
         */
        public Builder reactor(String reactor) {
            this.reactor = reactor;
            return this;
        }

        /**
         * Setter for engine.
         * @param  engine  String value for engine.
         * @return Builder
         */
        public Builder engine(String engine) {
            this.engine = engine;
            return this;
        }

        /**
         * Setter for modules.
         * @param  modules  List of String value for modules.
         * @return Builder
         */
        public Builder modules(List<String> modules) {
            this.modules = modules;
            return this;
        }

        /**
         * Setter for mounts.
         * @param  mounts  List of String value for mounts.
         * @return Builder
         */
        public Builder mounts(List<String> mounts) {
            this.mounts = mounts;
            return this;
        }

        /**
         * Builds a new {@link ShipyardListing} object using the set fields.
         * @return {@link ShipyardListing}
         */
        public ShipyardListing build() {
            return new ShipyardListing(id, waypoint, price, role, frame, reactor, engine, modules,
                    mounts);
        }
    }
}
