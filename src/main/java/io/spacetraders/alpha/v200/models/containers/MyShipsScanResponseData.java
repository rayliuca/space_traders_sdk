/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.spacetraders.alpha.v200.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.spacetraders.alpha.v200.ApiHelper;
import io.spacetraders.alpha.v200.annotations.TypeCombinatorsCaseMarker;
import io.spacetraders.alpha.v200.models.Data13;
import io.spacetraders.alpha.v200.models.Data131;
import io.spacetraders.alpha.v200.models.Data132;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for one-of types.
 */
@JsonDeserialize(using = MyShipsScanResponseData.MyShipsScanResponseDataDeserializer.class)
public abstract class MyShipsScanResponseData {
    
    /**
     * One-of type initialization method.
     * @param data13 Data13 value for data13.
     * @return The Data13Case object.
     */
    public static MyShipsScanResponseData fromData13(Data13 data13) {
        return data13 == null ? null : new Data13Case(data13);
    }

    /**
     * One-of type initialization method.
     * @param data131 Data131 value for data131.
     * @return The Data131Case object.
     */
    public static MyShipsScanResponseData fromData131(Data131 data131) {
        return data131 == null ? null : new Data131Case(data131);
    }

    /**
     * One-of type initialization method.
     * @param data132 Data132 value for data132.
     * @return The Data132Case object.
     */
    public static MyShipsScanResponseData fromData132(Data132 data132) {
        return data132 == null ? null : new Data132Case(data132);
    }

    /**
     * Method to match from the provided one-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The one-of type cases callback.
     * @return The one-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for one-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R data13(Data13 data13);

        R data131(Data131 data131);

        R data132(Data132 data132);
    }

    /**
     * This is a implementation class for Data13Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorsCaseMarker
    private static class Data13Case extends MyShipsScanResponseData {

        @JsonValue
        private Data13 data13;

        Data13Case(Data13 data13) {
            this.data13 = data13;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.data13(this.data13);
        }

        @JsonCreator
        private Data13Case(JsonNode jsonNode) throws IOException {
            this.data13 = ApiHelper.deserialize(jsonNode,
                Data13.class);
        }

        @Override
        public String toString() {
            return data13.toString();
        }
    }

    /**
     * This is a implementation class for Data131Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorsCaseMarker
    private static class Data131Case extends MyShipsScanResponseData {

        @JsonValue
        private Data131 data131;

        Data131Case(Data131 data131) {
            this.data131 = data131;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.data131(this.data131);
        }

        @JsonCreator
        private Data131Case(JsonNode jsonNode) throws IOException {
            this.data131 = ApiHelper.deserialize(jsonNode,
                Data131.class);
        }

        @Override
        public String toString() {
            return data131.toString();
        }
    }

    /**
     * This is a implementation class for Data132Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorsCaseMarker
    private static class Data132Case extends MyShipsScanResponseData {

        @JsonValue
        private Data132 data132;

        Data132Case(Data132 data132) {
            this.data132 = data132;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.data132(this.data132);
        }

        @JsonCreator
        private Data132Case(JsonNode jsonNode) throws IOException {
            this.data132 = ApiHelper.deserialize(jsonNode,
                Data132.class);
        }

        @Override
        public String toString() {
            return data132.toString();
        }
    }

    /**
     * This is a custom deserializer class for MyShipsScanResponseData.
     */
    protected static class MyShipsScanResponseDataDeserializer
        extends JsonDeserializer<MyShipsScanResponseData> {

        @Override
        public MyShipsScanResponseData deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(Data13Case.class, Data131Case.class,
                    Data132Case.class), true);
        }
    }

}
