/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.spacetraders.alpha.v200.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Data1 type.
 */
public class Data1 {
    private String token;
    private Agent agent;
    private Faction faction;
    private Contract contract;
    private Ship ship;

    /**
     * Default constructor.
     */
    public Data1() {
    }

    /**
     * Initialization constructor.
     * @param  token  String value for token.
     * @param  agent  Agent value for agent.
     * @param  faction  Faction value for faction.
     * @param  contract  Contract value for contract.
     * @param  ship  Ship value for ship.
     */
    public Data1(
            String token,
            Agent agent,
            Faction faction,
            Contract contract,
            Ship ship) {
        this.token = token;
        this.agent = agent;
        this.faction = faction;
        this.contract = contract;
        this.ship = ship;
    }

    /**
     * Getter for Token.
     * @return Returns the String
     */
    @JsonGetter("token")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getToken() {
        return token;
    }

    /**
     * Setter for Token.
     * @param token Value for String
     */
    @JsonSetter("token")
    public void setToken(String token) {
        this.token = token;
    }

    /**
     * Getter for Agent.
     * @return Returns the Agent
     */
    @JsonGetter("agent")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Agent getAgent() {
        return agent;
    }

    /**
     * Setter for Agent.
     * @param agent Value for Agent
     */
    @JsonSetter("agent")
    public void setAgent(Agent agent) {
        this.agent = agent;
    }

    /**
     * Getter for Faction.
     * @return Returns the Faction
     */
    @JsonGetter("faction")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Faction getFaction() {
        return faction;
    }

    /**
     * Setter for Faction.
     * @param faction Value for Faction
     */
    @JsonSetter("faction")
    public void setFaction(Faction faction) {
        this.faction = faction;
    }

    /**
     * Getter for Contract.
     * @return Returns the Contract
     */
    @JsonGetter("contract")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Contract getContract() {
        return contract;
    }

    /**
     * Setter for Contract.
     * @param contract Value for Contract
     */
    @JsonSetter("contract")
    public void setContract(Contract contract) {
        this.contract = contract;
    }

    /**
     * Getter for Ship.
     * @return Returns the Ship
     */
    @JsonGetter("ship")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Ship getShip() {
        return ship;
    }

    /**
     * Setter for Ship.
     * @param ship Value for Ship
     */
    @JsonSetter("ship")
    public void setShip(Ship ship) {
        this.ship = ship;
    }

    /**
     * Converts this Data1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Data1 [" + "token=" + token + ", agent=" + agent + ", faction=" + faction
                + ", contract=" + contract + ", ship=" + ship + "]";
    }

    /**
     * Builds a new {@link Data1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Data1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .token(getToken())
                .agent(getAgent())
                .faction(getFaction())
                .contract(getContract())
                .ship(getShip());
        return builder;
    }

    /**
     * Class to build instances of {@link Data1}.
     */
    public static class Builder {
        private String token;
        private Agent agent;
        private Faction faction;
        private Contract contract;
        private Ship ship;



        /**
         * Setter for token.
         * @param  token  String value for token.
         * @return Builder
         */
        public Builder token(String token) {
            this.token = token;
            return this;
        }

        /**
         * Setter for agent.
         * @param  agent  Agent value for agent.
         * @return Builder
         */
        public Builder agent(Agent agent) {
            this.agent = agent;
            return this;
        }

        /**
         * Setter for faction.
         * @param  faction  Faction value for faction.
         * @return Builder
         */
        public Builder faction(Faction faction) {
            this.faction = faction;
            return this;
        }

        /**
         * Setter for contract.
         * @param  contract  Contract value for contract.
         * @return Builder
         */
        public Builder contract(Contract contract) {
            this.contract = contract;
            return this;
        }

        /**
         * Setter for ship.
         * @param  ship  Ship value for ship.
         * @return Builder
         */
        public Builder ship(Ship ship) {
            this.ship = ship;
            return this;
        }

        /**
         * Builds a new {@link Data1} object using the set fields.
         * @return {@link Data1}
         */
        public Data1 build() {
            return new Data1(token, agent, faction, contract, ship);
        }
    }
}
