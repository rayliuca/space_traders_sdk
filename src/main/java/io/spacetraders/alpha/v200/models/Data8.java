/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.spacetraders.alpha.v200.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Data8 type.
 */
public class Data8 {
    private List<Survey> surveys;
    private Cooldown cooldown;

    /**
     * Default constructor.
     */
    public Data8() {
    }

    /**
     * Initialization constructor.
     * @param  surveys  List of Survey value for surveys.
     * @param  cooldown  Cooldown value for cooldown.
     */
    public Data8(
            List<Survey> surveys,
            Cooldown cooldown) {
        this.surveys = surveys;
        this.cooldown = cooldown;
    }

    /**
     * Getter for Surveys.
     * @return Returns the List of Survey
     */
    @JsonGetter("surveys")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Survey> getSurveys() {
        return surveys;
    }

    /**
     * Setter for Surveys.
     * @param surveys Value for List of Survey
     */
    @JsonSetter("surveys")
    public void setSurveys(List<Survey> surveys) {
        this.surveys = surveys;
    }

    /**
     * Getter for Cooldown.
     * @return Returns the Cooldown
     */
    @JsonGetter("cooldown")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Cooldown getCooldown() {
        return cooldown;
    }

    /**
     * Setter for Cooldown.
     * @param cooldown Value for Cooldown
     */
    @JsonSetter("cooldown")
    public void setCooldown(Cooldown cooldown) {
        this.cooldown = cooldown;
    }

    /**
     * Converts this Data8 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Data8 [" + "surveys=" + surveys + ", cooldown=" + cooldown + "]";
    }

    /**
     * Builds a new {@link Data8.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Data8.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .surveys(getSurveys())
                .cooldown(getCooldown());
        return builder;
    }

    /**
     * Class to build instances of {@link Data8}.
     */
    public static class Builder {
        private List<Survey> surveys;
        private Cooldown cooldown;



        /**
         * Setter for surveys.
         * @param  surveys  List of Survey value for surveys.
         * @return Builder
         */
        public Builder surveys(List<Survey> surveys) {
            this.surveys = surveys;
            return this;
        }

        /**
         * Setter for cooldown.
         * @param  cooldown  Cooldown value for cooldown.
         * @return Builder
         */
        public Builder cooldown(Cooldown cooldown) {
            this.cooldown = cooldown;
            return this;
        }

        /**
         * Builds a new {@link Data8} object using the set fields.
         * @return {@link Data8}
         */
        public Data8 build() {
            return new Data8(surveys, cooldown);
        }
    }
}
