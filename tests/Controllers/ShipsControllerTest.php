<?php
/*
 * SpaceTradersAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SpaceTradersAPILib\Tests;

use SpaceTradersAPILib\Exceptions\ApiException;
use SpaceTradersAPILib\Exceptions;
use SpaceTradersAPILib\ApiHelper;
use SpaceTradersAPILib\Models;
use PHPUnit\Framework\TestCase;

class ShipsControllerTest extends TestCase
{
    /**
     * @var \SpaceTradersAPILib\Controllers\ShipsController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected static $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$httpResponse = new HttpCallBackCatcher();
        self::$controller = ClientFactory::create(self::$httpResponse)->getShipsController();
    }


    /**
     * Retrieve all of your ships.
     */
    public function testTestGetMyShips()
    {

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->getMyShips();
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );

        // Test headers
        $headers = [];
        $headers['Content-Type'] = 'application/json' ;
        
        $this->assertTrue(
            TestHelper::areHeadersProperSubsetOf($headers, self::$httpResponse->getResponse()->getHeaders(), true),
            "Headers do not match"
        );

        // Test whether the captured response is as we expected
        $this->assertNotNull($result, "Result does not exist");

        $this->assertTrue(
            TestHelper::isJsonObjectProperSubsetOf(
                '{"data":[{"symbol":"55B261-1","crew":null,"officers":null,"fuel":100,"frame":"FRAME_' .
                'DRONE","reactor":"REACTOR_SOLAR_I","engine":"ENGINE_SOLAR_PROPULSION","modules":["MO' .
                'DULE_CARGO_HOLD"],"mounts":["MOUNT_MINING_LASER_I"],"registration":{"factionSymbol":' .
                '"COMMERCE_REPUBLIC","agentSymbol":"55B261","fee":100,"role":"EXCAVATOR"},"integrity"' .
                ':{"frame":1,"reactor":1,"engine":1},"status":"DOCKED","location":"X1-OE-PM","cargo":' .
                '[]},{"symbol":"55B261-2","crew":null,"officers":null,"fuel":100,"frame":"FRAME_DRONE' .
                '","reactor":"REACTOR_SOLAR_I","engine":"ENGINE_SOLAR_PROPULSION","modules":["MODULE_' .
                'CARGO_HOLD"],"mounts":["MOUNT_MINING_LASER_I"],"registration":{"factionSymbol":"COMM' .
                'ERCE_REPUBLIC","agentSymbol":"55B261","fee":100,"role":"EXCAVATOR"},"integrity":{"fr' .
                'ame":1,"reactor":1,"engine":1},"status":"DOCKED","location":"X1-OE-PM","cargo":[]},{' .
                '"symbol":"55B261-3","crew":null,"officers":null,"fuel":100,"frame":"FRAME_DRONE","re' .
                'actor":"REACTOR_SOLAR_I","engine":"ENGINE_SOLAR_PROPULSION","modules":["MODULE_CARGO' .
                '_HOLD"],"mounts":["MOUNT_MINING_LASER_I"],"registration":{"factionSymbol":"COMMERCE_' .
                'REPUBLIC","agentSymbol":"55B261","fee":100,"role":"EXCAVATOR"},"integrity":{"frame":' .
                '1,"reactor":1,"engine":1},"status":"DOCKED","location":"X1-OE-PM","cargo":[]},{"symb' .
                'ol":"55B261-4","crew":null,"officers":null,"fuel":100,"frame":"FRAME_DRONE","reactor' .
                '":"REACTOR_SOLAR_I","engine":"ENGINE_SOLAR_PROPULSION","modules":["MODULE_CARGO_HOLD' .
                '"],"mounts":["MOUNT_MINING_LASER_I"],"registration":{"factionSymbol":"COMMERCE_REPUB' .
                'LIC","agentSymbol":"55B261","fee":100,"role":"EXCAVATOR"},"integrity":{"frame":1,"re' .
                'actor":1,"engine":1},"status":"DOCKED","location":"X1-OE-PM","cargo":[]},{"symbol":"' .
                '55B261-5","crew":null,"officers":null,"fuel":100,"frame":"FRAME_DRONE","reactor":"RE' .
                'ACTOR_SOLAR_I","engine":"ENGINE_SOLAR_PROPULSION","modules":["MODULE_CARGO_HOLD"],"m' .
                'ounts":["MOUNT_MINING_LASER_I"],"registration":{"factionSymbol":"COMMERCE_REPUBLIC",' .
                '"agentSymbol":"55B261","fee":100,"role":"EXCAVATOR"},"integrity":{"frame":1,"reactor' .
                '":1,"engine":1},"status":"DOCKED","location":"X1-OE-PM","cargo":[]},{"symbol":"55B26' .
                '1-6","crew":null,"officers":null,"fuel":100,"frame":"FRAME_DRONE","reactor":"REACTOR' .
                '_SOLAR_I","engine":"ENGINE_SOLAR_PROPULSION","modules":["MODULE_CARGO_HOLD"],"mounts' .
                '":["MOUNT_MINING_LASER_I"],"registration":{"factionSymbol":"COMMERCE_REPUBLIC","agen' .
                'tSymbol":"55B261","fee":100,"role":"EXCAVATOR"},"integrity":{"frame":1,"reactor":1,"' .
                'engine":1},"status":"DOCKED","location":"X1-OE-PM","cargo":[]}],"meta":{"total":6,"p' .
                'age":1,"limit":20}}',
                self::$httpResponse->getResponse()->getRawBody(),
                false,
                true,
                false
            ),
            "Response body does not match in keys"
        );
    }
}
