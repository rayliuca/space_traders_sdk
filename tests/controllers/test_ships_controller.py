# -*- coding: utf-8 -*-

"""
spacetradersapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from tests.test_helper import TestHelper
from spacetradersapi.api_helper import APIHelper


class ShipsControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(ShipsControllerTests, cls).setUpClass()
        cls.controller = cls.client.ships
        cls.response_catcher = cls.controller.http_call_back

    # Retrieve all of your ships.
    def test_get_my_ships(self):

        # Perform the API call through the SDK function
        result = self.controller.get_my_ships()

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))

        
        # Test whether the captured response is as we expected
        self.assertIsNotNone(result)
        expected_body = APIHelper.json_deserialize('{"data":[{"symbol":"55B261-1","crew":null,"officers":null,"fuel":1'
            '00,"frame":"FRAME_DRONE","reactor":"REACTOR_SOLAR_I","engine":"ENG'
            'INE_SOLAR_PROPULSION","modules":["MODULE_CARGO_HOLD"],"mounts":["M'
            'OUNT_MINING_LASER_I"],"registration":{"factionSymbol":"COMMERCE_RE'
            'PUBLIC","agentSymbol":"55B261","fee":100,"role":"EXCAVATOR"},"inte'
            'grity":{"frame":1,"reactor":1,"engine":1},"status":"DOCKED","locat'
            'ion":"X1-OE-PM","cargo":[]},{"symbol":"55B261-2","crew":null,"offi'
            'cers":null,"fuel":100,"frame":"FRAME_DRONE","reactor":"REACTOR_SOL'
            'AR_I","engine":"ENGINE_SOLAR_PROPULSION","modules":["MODULE_CARGO_'
            'HOLD"],"mounts":["MOUNT_MINING_LASER_I"],"registration":{"factionS'
            'ymbol":"COMMERCE_REPUBLIC","agentSymbol":"55B261","fee":100,"role"'
            ':"EXCAVATOR"},"integrity":{"frame":1,"reactor":1,"engine":1},"stat'
            'us":"DOCKED","location":"X1-OE-PM","cargo":[]},{"symbol":"55B261-3'
            '","crew":null,"officers":null,"fuel":100,"frame":"FRAME_DRONE","re'
            'actor":"REACTOR_SOLAR_I","engine":"ENGINE_SOLAR_PROPULSION","modul'
            'es":["MODULE_CARGO_HOLD"],"mounts":["MOUNT_MINING_LASER_I"],"regis'
            'tration":{"factionSymbol":"COMMERCE_REPUBLIC","agentSymbol":"55B26'
            '1","fee":100,"role":"EXCAVATOR"},"integrity":{"frame":1,"reactor":'
            '1,"engine":1},"status":"DOCKED","location":"X1-OE-PM","cargo":[]},'
            '{"symbol":"55B261-4","crew":null,"officers":null,"fuel":100,"frame'
            '":"FRAME_DRONE","reactor":"REACTOR_SOLAR_I","engine":"ENGINE_SOLAR'
            '_PROPULSION","modules":["MODULE_CARGO_HOLD"],"mounts":["MOUNT_MINI'
            'NG_LASER_I"],"registration":{"factionSymbol":"COMMERCE_REPUBLIC","'
            'agentSymbol":"55B261","fee":100,"role":"EXCAVATOR"},"integrity":{"'
            'frame":1,"reactor":1,"engine":1},"status":"DOCKED","location":"X1-'
            'OE-PM","cargo":[]},{"symbol":"55B261-5","crew":null,"officers":nul'
            'l,"fuel":100,"frame":"FRAME_DRONE","reactor":"REACTOR_SOLAR_I","en'
            'gine":"ENGINE_SOLAR_PROPULSION","modules":["MODULE_CARGO_HOLD"],"m'
            'ounts":["MOUNT_MINING_LASER_I"],"registration":{"factionSymbol":"C'
            'OMMERCE_REPUBLIC","agentSymbol":"55B261","fee":100,"role":"EXCAVAT'
            'OR"},"integrity":{"frame":1,"reactor":1,"engine":1},"status":"DOCK'
            'ED","location":"X1-OE-PM","cargo":[]},{"symbol":"55B261-6","crew":'
            'null,"officers":null,"fuel":100,"frame":"FRAME_DRONE","reactor":"R'
            'EACTOR_SOLAR_I","engine":"ENGINE_SOLAR_PROPULSION","modules":["MOD'
            'ULE_CARGO_HOLD"],"mounts":["MOUNT_MINING_LASER_I"],"registration":'
            '{"factionSymbol":"COMMERCE_REPUBLIC","agentSymbol":"55B261","fee":'
            '100,"role":"EXCAVATOR"},"integrity":{"frame":1,"reactor":1,"engine'
            '":1},"status":"DOCKED","location":"X1-OE-PM","cargo":[]}],"meta":{'
            '"total":6,"page":1,"limit":20}}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        self.assertTrue(TestHelper.match_body(expected_body, received_body))

